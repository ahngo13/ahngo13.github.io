I"s_<p>JUnit이라는 것에 대해서 조금 자세히 공부하려다 보니 이전 글인 <a href="https://ahngo13.github.io/springboot-rest-api2/">SpringBoot REST API 서버 만들기 - (2) MySQL 및 Spring Data JPA</a> 연동 글에서 단위테스트에 대해서 너무 소홀하게 작성한 것을 깨닫고 다시 이렇게 조금 더 자세하게 적어보려고 한다. 기존 프로젝트 내용도 조금은 수정해서 테스트 케이스를 추가할 듯 하니 ‘이런식으로 쓰는구나!’ 정도 느낌만 받아가면 될 듯하다.</p>

<h1 id="junit이란">JUnit이란?</h1>

<ul>
  <li>Java용 단위테스트 프레임워크</li>
</ul>

<h2 id="단위테스트unit-test란">단위테스트(Unit Test)란?</h2>

<ul>
  <li>소스 코드의 특정 모듈이 의도된 대로 잘 작동하는지 검증</li>
  <li>모든 함수와 메소드에 대한 테스트 케이스 작성</li>
</ul>

<p>(모든 함수와 메소드에 대한 테스트 케이스라고 되어있는 것을 보고 이 포스팅을 써야된다는 생각이 들었다)</p>

<h1 id="junit-및-assertj-설치">JUnit 및 assertJ 설치</h1>

<p>필자의 경우 Springboot의 메이븐 프로젝트로 만들었기 때문에 pom.xml에 2개의 dependency를 추가하였다. 그래들 프로젝트인 분들은 <a href="https://mvnrepository.com/">https://mvnrepository.com/</a> 에서 검색해서 build.gradle 파일에 추가하도록 하자.</p>

<p><code class="language-plaintext highlighter-rouge">pom.xml</code></p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- https://mvnrepository.com/artifact/org.assertj/assertj-core --&gt;</span>
		<span class="nt">&lt;dependency&gt;</span>
			<span class="nt">&lt;groupId&gt;</span>org.assertj<span class="nt">&lt;/groupId&gt;</span>
			<span class="nt">&lt;artifactId&gt;</span>assertj-core<span class="nt">&lt;/artifactId&gt;</span>
			<span class="nt">&lt;version&gt;</span>3.17.2<span class="nt">&lt;/version&gt;</span>
			<span class="nt">&lt;scope&gt;</span>test<span class="nt">&lt;/scope&gt;</span>
		<span class="nt">&lt;/dependency&gt;</span>
<span class="c">&lt;!-- https://mvnrepository.com/artifact/junit/junit --&gt;</span>
		<span class="nt">&lt;dependency&gt;</span>
			<span class="nt">&lt;groupId&gt;</span>junit<span class="nt">&lt;/groupId&gt;</span>
			<span class="nt">&lt;artifactId&gt;</span>junit<span class="nt">&lt;/artifactId&gt;</span>
			<span class="nt">&lt;version&gt;</span>4.13<span class="nt">&lt;/version&gt;</span>
			<span class="nt">&lt;scope&gt;</span>test<span class="nt">&lt;/scope&gt;</span>
		<span class="nt">&lt;/dependency&gt;</span>
</code></pre></div></div>

<h1 id="junit-annotation-정리">JUnit annotation 정리</h1>

<p><code class="language-plaintext highlighter-rouge">@Test</code> : 테스트 메소드 지정</p>

<p><code class="language-plaintext highlighter-rouge">@Test(timeout=5000)</code> : 테스트 메소드 수행시간 제한 (시간단위는 밀리초)</p>

<p><code class="language-plaintext highlighter-rouge">@Test(expected=RuntimeException.class)</code> : 테스트 메소드 예외처리 지정 (익셉션이 발생해야 성공)</p>

<p><code class="language-plaintext highlighter-rouge">@BeforeClass, @AfterClass</code> : 해당 테스트 클래스에서 딱 한번씩만 수행되도록 설정</p>

<p><code class="language-plaintext highlighter-rouge">@Before, @After</code> : 해당 테스트 클래스에서 메소드들이 테스트 되기 전과 후에 각각 실행되도록 설정</p>

<h1 id="assertthat-메소드-정리">assertThat 메소드 정리</h1>

<p>기존의 assert 함수들이 있지만 가독성이 떨어지므로 assertThat을 쓰는 것이 좋다고 한다. 그 외에도 콤비네이션이 가능하고 조합을 이뤄서 사용이 가능하다는 장점이 있다고 하니 참고하기 바란다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">assertThat</span><span class="o">(</span><span class="n">frodo</span><span class="o">)</span>
  <span class="o">.</span><span class="na">isNotEqualTo</span><span class="o">(</span><span class="n">sauron</span><span class="o">)</span>
  <span class="o">.</span><span class="na">isIn</span><span class="o">(</span><span class="n">fellowshipOfTheRing</span><span class="o">);</span>
 
<span class="n">assertThat</span><span class="o">(</span><span class="n">frodo</span><span class="o">.</span><span class="na">getName</span><span class="o">())</span>
  <span class="o">.</span><span class="na">startsWith</span><span class="o">(</span><span class="s">"Fro"</span><span class="o">)</span>
  <span class="o">.</span><span class="na">endsWith</span><span class="o">(</span><span class="s">"do"</span><span class="o">)</span>
  <span class="o">.</span><span class="na">isEqualToIgnoringCase</span><span class="o">(</span><span class="s">"frodo"</span><span class="o">);</span>
 
<span class="n">assertThat</span><span class="o">(</span><span class="n">fellowshipOfTheRing</span><span class="o">)</span>
  <span class="o">.</span><span class="na">hasSize</span><span class="o">(</span><span class="mi">9</span><span class="o">)</span>
  <span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="n">frodo</span><span class="o">,</span> <span class="n">sam</span><span class="o">)</span>
  <span class="o">.</span><span class="na">doesNotContain</span><span class="o">(</span><span class="n">sauron</span><span class="o">);</span>
</code></pre></div></div>

<h2 id="object-표명-오브젝트-간-비교">Object 표명 (오브젝트 간 비교)</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">assertThat</span><span class="o">(</span><span class="k">new</span> <span class="nc">Dog</span><span class="o">(</span><span class="s">"Cogi"</span><span class="o">)).</span><span class="na">isEqualTo</span><span class="o">(</span><span class="k">new</span> <span class="nc">Dog</span><span class="o">(</span><span class="s">"Cogi"</span><span class="o">));</span>  <span class="c1">// fail</span>
<span class="n">assertThat</span><span class="o">(</span><span class="k">new</span> <span class="nc">Dog</span><span class="o">(</span><span class="s">"Cogi"</span><span class="o">)).</span><span class="na">isEqualToComparingFieldByFieldRecursively</span><span class="o">(</span><span class="k">new</span> <span class="nc">Dog</span><span class="o">(</span><span class="s">"Cogi"</span><span class="o">));</span>  <span class="c1">// success</span>
</code></pre></div></div>

<h2 id="boolean-표명-참-거짓일-경우">Boolean 표명 (참, 거짓일 경우)</h2>

<p><code class="language-plaintext highlighter-rouge">isTrue()</code></p>

<p><code class="language-plaintext highlighter-rouge">isFalse()</code></p>

<h2 id="iterablearray-표명-리스트나-배열-구조일-경우">Iterable/Array 표명 (리스트나 배열 구조일 경우)</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">list</span> <span class="o">=</span> <span class="nc">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="s">"1"</span><span class="o">,</span> <span class="s">"2"</span><span class="o">,</span> <span class="s">"3"</span><span class="o">);</span>
 
<span class="n">assertThat</span><span class="o">(</span><span class="n">list</span><span class="o">)</span>
  <span class="o">.</span><span class="na">isNotEmpty</span><span class="o">()</span>
  <span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="s">"1"</span><span class="o">)</span>
  <span class="o">.</span><span class="na">doesNotContainNull</span><span class="o">()</span>
  <span class="o">.</span><span class="na">containsSequence</span><span class="o">(</span><span class="s">"2"</span><span class="o">,</span> <span class="s">"3"</span><span class="o">);</span>
</code></pre></div></div>

<h2 id="exception-예외-처리">Exception (예외 처리)</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">assertThatThrownBy</span><span class="o">(()</span> <span class="o">-&gt;</span> <span class="o">{</span>
    <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">list</span> <span class="o">=</span> <span class="nc">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="s">"String one"</span><span class="o">,</span> <span class="s">"String two"</span><span class="o">);</span>
    <span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">2</span><span class="o">);</span>
<span class="o">}).</span><span class="na">isInstanceOf</span><span class="o">(</span><span class="nc">IndexOutOfBoundsException</span><span class="o">.</span><span class="na">class</span><span class="o">)</span>
  <span class="o">.</span><span class="na">hasMessageContaining</span><span class="o">(</span><span class="s">"Index: 2, Size: 2"</span><span class="o">);</span>
</code></pre></div></div>

<h1 id="junit과-assertj를-활용한-단위테스트-하기">JUnit과 assertJ를 활용한 단위테스트 하기</h1>

<p>단위테스트 케이스를 처음 작성을 해보아서 어떻게 작성하는 것이 가장 효율적이고 당위성이 있는지는 잘 모르겠지만 각각의 단위테스트 케이스에 조금이나마 더 비중있게 배분하여 작성하려고 노력했다. 여러 케이스가 약간씩 겹치는 경우도 발생하는 경우가 있는 것 같은데 조금 더 사례를 찾아보면서 어떻게 작성하는게 가장 좋은 방향인지 검토 해야될 것 같다.</p>

<p><code class="language-plaintext highlighter-rouge">PostRepositoryTest.java</code></p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.hamletshu.restapi.entity</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">org.junit.After</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.junit.Ignore</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.junit.Test</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.junit.runner.RunWith</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.beans.factory.annotation.Autowired</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.boot.test.context.SpringBootTest</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.test.context.junit4.SpringRunner</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Optional</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">static</span> <span class="n">org</span><span class="o">.</span><span class="na">assertj</span><span class="o">.</span><span class="na">core</span><span class="o">.</span><span class="na">api</span><span class="o">.</span><span class="na">Assertions</span><span class="o">.</span><span class="na">assertThat</span><span class="o">;</span>

<span class="c1">//Junit이 없으면 pom.xml에 추가</span>
<span class="nd">@RunWith</span><span class="o">(</span><span class="nc">SpringRunner</span><span class="o">.</span><span class="na">class</span><span class="o">)</span>
<span class="nd">@SpringBootTest</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">PostRepositoryTest</span> <span class="o">{</span>
    <span class="nd">@Autowired</span>
    <span class="nc">PostRepository</span> <span class="n">postRepository</span><span class="o">;</span>

<span class="c1">//    @Test</span>
<span class="c1">//    @After</span>
<span class="c1">//    @Ignore</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">cleanup</span><span class="o">(){</span>
        <span class="n">postRepository</span><span class="o">.</span><span class="na">deleteAll</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="c1">//게시글 추가</span>
    <span class="nd">@Test</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">createPost</span><span class="o">(){</span>
        <span class="nc">String</span> <span class="n">title</span> <span class="o">=</span> <span class="s">"createTestTitle"</span><span class="o">;</span>
        <span class="nc">String</span> <span class="n">contents</span> <span class="o">=</span> <span class="s">"cerateTestContents"</span><span class="o">;</span>
        <span class="nc">Post</span> <span class="n">post</span> <span class="o">=</span> <span class="n">postRepository</span><span class="o">.</span><span class="na">save</span><span class="o">(</span><span class="nc">Post</span><span class="o">.</span><span class="na">builder</span><span class="o">()</span>
                <span class="o">.</span><span class="na">title</span><span class="o">(</span><span class="n">title</span><span class="o">)</span>
                <span class="o">.</span><span class="na">contents</span><span class="o">(</span><span class="n">contents</span><span class="o">)</span>
                <span class="o">.</span><span class="na">build</span><span class="o">());</span>

        <span class="n">assertThat</span><span class="o">(</span><span class="n">post</span><span class="o">.</span><span class="na">getTitle</span><span class="o">()).</span><span class="na">isEqualTo</span><span class="o">(</span><span class="n">title</span><span class="o">);</span>
        <span class="n">assertThat</span><span class="o">(</span><span class="n">post</span><span class="o">.</span><span class="na">getContents</span><span class="o">()).</span><span class="na">isEqualTo</span><span class="o">(</span><span class="n">contents</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="c1">//게시글 목록 조회</span>
    <span class="nd">@Test</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">getPostList</span><span class="o">(){</span>
        <span class="nc">String</span> <span class="n">title</span> <span class="o">=</span> <span class="s">"test title"</span><span class="o">;</span>
        <span class="nc">String</span> <span class="n">contents</span> <span class="o">=</span> <span class="s">"test contents"</span><span class="o">;</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="mi">10</span><span class="o">;</span> <span class="n">i</span><span class="o">++){</span>
            <span class="n">postRepository</span><span class="o">.</span><span class="na">save</span><span class="o">(</span><span class="nc">Post</span><span class="o">.</span><span class="na">builder</span><span class="o">()</span>
                    <span class="o">.</span><span class="na">title</span><span class="o">(</span><span class="n">title</span><span class="o">)</span>
                    <span class="o">.</span><span class="na">contents</span><span class="o">(</span><span class="n">contents</span><span class="o">)</span>
                    <span class="o">.</span><span class="na">build</span><span class="o">());</span>

        <span class="o">}</span>

        <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Post</span><span class="o">&gt;</span> <span class="n">postsList</span> <span class="o">=</span>  <span class="n">postRepository</span><span class="o">.</span><span class="na">findAll</span><span class="o">();</span>
        <span class="n">assertThat</span><span class="o">(</span><span class="n">postsList</span><span class="o">.</span><span class="na">size</span><span class="o">()&gt;=</span><span class="mi">10</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="c1">//특정 게시글 조회</span>
   <span class="nd">@Test</span>
   <span class="kd">public</span> <span class="kt">void</span> <span class="nf">getPost</span><span class="o">(){</span>
        <span class="nc">String</span> <span class="n">title</span> <span class="o">=</span> <span class="s">"test title"</span><span class="o">;</span>
        <span class="nc">String</span> <span class="n">contents</span> <span class="o">=</span> <span class="s">"test contents"</span><span class="o">;</span>
        <span class="n">postRepository</span><span class="o">.</span><span class="na">save</span><span class="o">(</span><span class="nc">Post</span><span class="o">.</span><span class="na">builder</span><span class="o">()</span>
                <span class="o">.</span><span class="na">title</span><span class="o">(</span><span class="n">title</span><span class="o">)</span>
                <span class="o">.</span><span class="na">contents</span><span class="o">(</span><span class="n">contents</span><span class="o">)</span>
                <span class="o">.</span><span class="na">build</span><span class="o">());</span>

        <span class="nc">Optional</span><span class="o">&lt;</span><span class="nc">Post</span><span class="o">&gt;</span> <span class="n">post</span> <span class="o">=</span> <span class="n">postRepository</span><span class="o">.</span><span class="na">findById</span><span class="o">(</span><span class="mi">1L</span><span class="o">);</span>

        <span class="n">assertThat</span><span class="o">(</span><span class="n">post</span><span class="o">.</span><span class="na">get</span><span class="o">().</span><span class="na">getTitle</span><span class="o">()).</span><span class="na">isEqualTo</span><span class="o">(</span><span class="n">title</span><span class="o">);</span>
        <span class="n">assertThat</span><span class="o">(</span><span class="n">post</span><span class="o">.</span><span class="na">get</span><span class="o">().</span><span class="na">getContents</span><span class="o">()).</span><span class="na">isEqualTo</span><span class="o">(</span><span class="n">contents</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="c1">//특정 게시글 수정</span>
    <span class="nd">@Test</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">updatePost</span><span class="o">(){</span>
        <span class="nc">String</span> <span class="n">title</span> <span class="o">=</span> <span class="s">"createTestTitle"</span><span class="o">;</span>
        <span class="nc">String</span> <span class="n">contents</span> <span class="o">=</span> <span class="s">"cerateTestContents"</span><span class="o">;</span>
        <span class="nc">Post</span> <span class="n">createPost</span> <span class="o">=</span> <span class="n">postRepository</span><span class="o">.</span><span class="na">save</span><span class="o">(</span><span class="nc">Post</span><span class="o">.</span><span class="na">builder</span><span class="o">()</span>
                <span class="o">.</span><span class="na">title</span><span class="o">(</span><span class="n">title</span><span class="o">)</span>
                <span class="o">.</span><span class="na">contents</span><span class="o">(</span><span class="n">contents</span><span class="o">)</span>
                <span class="o">.</span><span class="na">build</span><span class="o">());</span>

        <span class="n">title</span> <span class="o">=</span> <span class="s">"updateTestTitle"</span><span class="o">;</span>
        <span class="n">contents</span> <span class="o">=</span> <span class="s">"updateTestContents"</span><span class="o">;</span>

        <span class="nc">Post</span> <span class="n">updatePost</span> <span class="o">=</span> <span class="n">postRepository</span><span class="o">.</span><span class="na">save</span><span class="o">(</span><span class="nc">Post</span><span class="o">.</span><span class="na">builder</span><span class="o">()</span>
                <span class="o">.</span><span class="na">postId</span><span class="o">(</span><span class="n">createPost</span><span class="o">.</span><span class="na">getPostId</span><span class="o">())</span>
                <span class="o">.</span><span class="na">title</span><span class="o">(</span><span class="n">title</span><span class="o">)</span>
                <span class="o">.</span><span class="na">contents</span><span class="o">(</span><span class="n">contents</span><span class="o">)</span>
                <span class="o">.</span><span class="na">build</span><span class="o">());</span>

        <span class="n">assertThat</span><span class="o">(</span><span class="n">updatePost</span><span class="o">.</span><span class="na">getTitle</span><span class="o">()).</span><span class="na">isEqualTo</span><span class="o">(</span><span class="n">title</span><span class="o">);</span>
        <span class="n">assertThat</span><span class="o">(</span><span class="n">updatePost</span><span class="o">.</span><span class="na">getContents</span><span class="o">()).</span><span class="na">isEqualTo</span><span class="o">(</span><span class="n">contents</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="c1">//특정 게시글 삭제</span>
    <span class="nd">@Test</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">deletePost</span><span class="o">(){</span>
        <span class="nc">String</span> <span class="n">title</span> <span class="o">=</span> <span class="s">"createTestTitle"</span><span class="o">;</span>
        <span class="nc">String</span> <span class="n">contents</span> <span class="o">=</span> <span class="s">"cerateTestContents"</span><span class="o">;</span>
        <span class="nc">Post</span> <span class="n">createPost</span> <span class="o">=</span> <span class="n">postRepository</span><span class="o">.</span><span class="na">save</span><span class="o">(</span><span class="nc">Post</span><span class="o">.</span><span class="na">builder</span><span class="o">()</span>
                <span class="o">.</span><span class="na">title</span><span class="o">(</span><span class="n">title</span><span class="o">)</span>
                <span class="o">.</span><span class="na">contents</span><span class="o">(</span><span class="n">contents</span><span class="o">)</span>
                <span class="o">.</span><span class="na">build</span><span class="o">());</span>

        <span class="nc">Post</span> <span class="n">post</span> <span class="o">=</span> <span class="nc">Post</span><span class="o">.</span><span class="na">builder</span><span class="o">().</span><span class="na">postId</span><span class="o">(</span><span class="n">createPost</span><span class="o">.</span><span class="na">getPostId</span><span class="o">()).</span><span class="na">build</span><span class="o">();</span>
        <span class="n">postRepository</span><span class="o">.</span><span class="na">delete</span><span class="o">(</span><span class="n">post</span><span class="o">);</span>

        <span class="nc">Optional</span><span class="o">&lt;</span><span class="nc">Post</span><span class="o">&gt;</span> <span class="n">findPost</span> <span class="o">=</span> <span class="n">postRepository</span><span class="o">.</span><span class="na">findById</span><span class="o">(</span><span class="n">createPost</span><span class="o">.</span><span class="na">getPostId</span><span class="o">());</span>
        <span class="n">assertThat</span><span class="o">(</span><span class="n">findPost</span><span class="o">).</span><span class="na">isEmpty</span><span class="o">();</span>
    <span class="o">}</span>

<span class="o">}</span>
</code></pre></div></div>
:ET